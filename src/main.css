@import './normalize.css';

:root {
	--grey0: rgba(24, 24, 24, 1);
	--grey1: rgba(226, 226, 226, 1);
	--grey2: rgba(244, 244, 244, 1);
	--boxShadow: 0 0 2px 1px rgba(0, 0, 0, 0.6);
	--boxShadowInset: var(--boxShadow) inset;
	--colorMain: rgba(255, 102, 103, 1);
	--themeColorTransition: 0.2s linear;

	--bodyColor: var(--grey2);
	--textColor: var(--grey0);
}

.themeDark {
	--bodyColor: var(--grey0);
	--textColor: var(--grey2);
}

/* ??? Kinda works  */
@media (max-width: 560px) {
	:root {
		font-size: 14px;
	}
}

@media (max-width: 490px) {
	:root {
		font-size: 12px;
	}
}

@media (max-width: 420px) {
	:root {
		font-size: 10px;
	}
}

@media (max-width: 350px) {
	:root {
		font-size: 8px;
	}
}

* {
	-webkit-tap-highlight-color: transparent;
	box-sizing: border-box;
	margin: 0;
}

button {
	display: block;
	border: none;
	outline: none;
	cursor: pointer;
}

body {
	font-family: sans-serif;
	margin: min(5%, 3rem);
	color: var(--textColor);
	background: var(--bodyColor);
	transition: background var(--themeColorTransition), color var(--themeColorTransition);
}

body > * {
	margin: auto;
	margin-bottom: 3rem;
}

body > :last-child {
	margin-bottom: 0;
}

h1 {
	text-align: center;
	font-size: 4rem;
	font-weight: normal;
}

/*#boxCanvas {
	width: 100%;
	max-width: 600px;
}

#boxCanvas > div {
	position: relative;
	height: 0;
	padding-bottom: 100%;
}

#boxCanvas canvas {
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	cursor: pointer;
}*/

#boxControls {
	font-size: 1.1rem;
	display: flex;
	justify-content: space-between;
	width: 19.1em;
}

.btnControl {
	width: 5.45em;
	padding: 0.9em;
	color: var(--grey0);
	background: var(--colorMain);
	border-radius: 0.23em;
	transition: background 0.1s linear;
}

.btnControl:active {
	background: rgba(255, 102, 103, 0.5);
}

#boxBtnsShape {
	font-size: 1.1rem;
	display: flex;
	justify-content: space-between;
	width: 28.25em;
}

.btnShape {
	width: 6.5em;
	padding: 1.1em;
	background: var(--grey2);
	box-shadow: var(--boxShadowInset);
	transition: background 0.1s linear;
}

.btnShape:active {
	background: var(--colorMain);
}

.btnShape.selected {
	background: var(--colorMain);
}

.svgShape {
	width: 2em;
	height: 2em;
	margin-top: 2em;
	fill: var(--grey0);
}

#boxSwitches {
	display: flex;
	justify-content: space-between;
	width: 100%;
	max-width: 600px;
}

.boxSwitch {
	display: flex;
	align-items: center;
	font-size: 1.1rem;
}

#sun,
#moon {
	width: 1.82em;
	height: 1.82em;
	fill: var(--textColor);
	transition: fill var(--themeColorTransition);
}

#sun,
#switchTheme {
	margin-right: 2.16em;
}

#switchGrid {
	margin-left: 2.16em;
}

#switchTheme,
#switchGrid {
	--trackWidth: 4.26em;
	--trackHeight: 2.05em;
	--trackColor: var(--grey1);
	--thumbDiameter: 1.25em;
	--thumbColor: var(--grey2);
}

#switchGrid.on {
	background: var(--colorMain);
}

#boxInput {
	display: flex;
	justify-content: space-between;
	align-items: center;
	font-size: 1.25em;
	/* width of the slider */
	width: calc(15.625rem + 1.5625rem);
}

#input {
	font-size: 1.25rem;
	--padding: 0.6em;
	width: calc(5ch + var(--padding) * 2);
	padding: var(--padding);
	border: none;
	outline: none;
	color: var(--grey0);
	background: var(--grey2);
	box-shadow: var(--boxShadowInset);
}

#sliderSpeed {
	--trackWidth: 20.625rem;
	--trackHeight: 0.3125rem;
	--trackBorderRadius: 0.15rem;
	--trackColor: rgba(255, 132, 132, 0.5);
	--fillColor: var(--colorMain);
	--thumbDiameter: 1.8rem;
	--thumbColor: var(--grey2);
	/* dependent on the ms per generation step */
	--value: calc(var(--trackWidth) * 0.5);
}

.slider {
	width: calc(var(--trackWidth) + var(--thumbDiameter));
	height: var(--thumbDiameter);
	cursor: pointer;
	touch-action: none;
}

.sliderTrack {
	position: relative;
	top: calc((var(--thumbDiameter) - var(--trackHeight)) / 2);
	width: var(--trackWidth);
	height: var(--trackHeight);
	border-radius: var(--trackBorderRadius);
	background: var(--trackColor);
	margin: auto;
}

.sliderTrackFill {
	width: var(--value);
	height: 100%;
	border-radius: var(--trackBorderRadius);
	background: var(--fillColor);
}

.sliderThumb {
	position: relative;
	bottom: var(--trackHeight);
	left: var(--value);
	width: var(--thumbDiameter);
	height: var(--thumbDiameter);
	border-radius: 50%;
	background: var(--thumbColor);
	box-shadow: var(--boxShadow);
}

.sliderDragging {
	user-select: none;
}
/*  These are applied to the document element  */
.sliderDragging * {
	cursor: pointer;
}

.switch {
	width: var(--trackWidth);
	height: var(--trackHeight);
	border-radius: calc(var(--trackHeight) / 2);
	background: var(--trackColor);
	box-shadow: var(--boxShadowInset);
	cursor: pointer;
	transition: background var(--themeColorTransition);
}

.switchThumb {
	position: relative;
	left: calc((var(--trackHeight) - var(--thumbDiameter)) / 2);
	top: calc((var(--trackHeight) - var(--thumbDiameter)) / 2);
	width: var(--thumbDiameter);
	height: var(--thumbDiameter);
	border-radius: 50%;
	background: var(--thumbColor);
	box-shadow: var(--boxShadow);
	transition: left var(--themeColorTransition);
}

.switch.on .switchThumb {
	left: calc(var(--trackWidth) - var(--thumbDiameter) - (var(--trackHeight) - var(--thumbDiameter)) / 2);
}
